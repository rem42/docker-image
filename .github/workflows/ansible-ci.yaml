name: ansible-ci

on:
  push:
    branches:
      - 'main'

jobs:
  create:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      #—— Composer 🧙‍️ —————————————————————————————————————————————————————————

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make install

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————

      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Generate docker template
        run: bin/console app:docker:generate php

      - name: Generate matrix json file
        run: bin/console app:gha:matrix php

      - uses: actions/upload-artifact@master
        with:
          name: templates
          path: .render/

      - id: set-matrix
        run: |
            matrix=$((cat .render/matrix.json) | jq -c .)
            echo "::set-output name=matrix::$matrix"

  docker:
    needs: create
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.create.outputs.matrix)}}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: templates
          path: .render/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # —— Bash ——————————————————————————————————————————————————————————
      - name: Build docker image
        run: ./scripts/build_one.sh ${{ matrix.repository }} ansible ${{ matrix.versions }}
